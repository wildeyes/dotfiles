# from https://gist.github.com/junegunn/f4fca918e937e6bf5bad
__fzf_use_tmux__() {
  [ -n "$TMUX_PANE" ] && [ "${FZF_TMUX:-0}" != 0 ] && [ ${LINES:-40} -gt 15 ]
}

__fzfcmd() {
  __fzf_use_tmux__ &&
    echo "fzf-tmux -d${FZF_TMUX_HEIGHT:-40%}" || echo "fzf"
}

fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
  selected=( $(fc -rl 1 |
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}

fg() {
  local out shas sha q k
  while out=$(
      git log --graph --color=always \
          --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
      fzf --ansi --multi --no-sort --reverse --query="$q" \
          --print-query --expect=ctrl-d --toggle-sort=\`); do
    q=$(head -1 <<< "$out")
    k=$(head -2 <<< "$out" | tail -1)
    shas=$(sed '1,2d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
    [ -z "$shas" ] && continue
    if [ "$k" = ctrl-d ]; then
      # git diff --color=always $shas | less -R
      echo $shas | pbcopy
    else
      for sha in $shas; do
        git show --color=always $sha | less -R
      done
    fi
  done
}

fbr() { # requires fzf
  local branches branch
  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# from https://github.com/itainoam/dotfiles/blob/master/.zshenv
fzf-down() {
  fzf --height 60% "$@" --border
}

branches()  {
  git branch --sort=-committerdate  | cut -c2- | fzf --height 40% --reverse --preview="echo {} | xargs -I % sh -c 'git log origin/develop..%'"
}

commits() {
    HASH=`git --no-pager log --pretty=format:'%h %<(20)%an %<(15)%cr %s' |\
      fzf-down --tiebreak=index --reverse |\
      awk 'END { if (NR==0)  exit 1; else print $1;}'` && echo $HASH 
  }

unstaged() {
    git ls-files --modified --others --exclude-standard | fzf  --height 50% --reverse -m --preview-window down:35 --bind "ctrl-n:preview-page-down,ctrl-p:preview-page-up,q:abort"\
 --preview="echo {}| cut -d ' ' -f3 | xargs -I % sh -c 'git diff --color % | diff-so-fancy'"
}

staged() {
     git diff --name-only --cached | fzf  --height 50% --reverse --preview-window down:35 --bind "ctrl-n:preview-page-down,ctrl-p:preview-page-up,q:abort"\
 --preview="echo {}| cut -d ' ' -f3 | xargs -I % sh -c 'git diff --staged --color % | diff-so-fancy'"
}

changed() {
     git status -s | fzf  --height 50%  --preview-window down:35 --ansi -m | cut -c 4- 
}

stashes() {
  git stash list | fzf  --height 50% --reverse -m --preview-window down:35 --preview="echo {} | cut -d ':' -f1 | xargs -I % sh -c 'git stash show -p %' | diff-so-fancy" | cut -d ":" -f1
}

fixup() {
oldcommit=$(git --no-pager log --pretty=format:'%h %<(20)%an %<(15)%cr %s' |\
  fzf  --height 90% --reverse\
        --bind "ctrl-n:preview-page-down,ctrl-p:preview-page-up,q:abort"\
        --header 'Select which commit to add changes to. ctrl-n, ctrl-p to scroll diff. ' \
        --expect=enter \
        --preview-window down:25 --preview="git diff --color --staged | diff-so-fancy" |\
        awk '{print $1}') && [ ! -z "$oldcommit" ] && git commit --fixup=$oldcommit && git rebase --interactive --autosquash $oldcommit~
}


#add ** autocomplete to g-start
_fzf_complete_g-start() {
    ARGS="$@"
     
    local branches
    jiras=$(jiras)
    if [[ $ARGS == 'g-start'* ]]; then
        _fzf_complete "--reverse --multi" "$@" < <(
            echo $jiras
        )
    else
        eval "zle ${fzf_default_completion:-expand-or-complete}"
    fi
}
g-start() {
 # git fetch && git checkout master && git rebase --autostash && git checkout -b "itai/$1:u/$2" master && git branch --set-upstream-to "origin/master"; 
 git fetch && git checkout develop && git rebase --autostash && git checkout -b "itai/SCPJM-$1-$2" develop
}

g-finish() {
  JIRA=$(git branch | sed -n '/\* /s///p' | grep -oiE 'SCPJM-[0-9]{4}');
  DIFF_LOG=$(git log --pretty=format:%s%n%n%b origin/develop..);

  # jira transition --noedit 'Start Progress' $JIRA || true;
  # jira transition --noedit 'Ready for review' $JIRA || true;
  
  # sometime previous pr msg is left, no need to use them.
  rm -f ~/dev/meetings-ui-web/.git/PULLREQ_EDITMSG

  echo $DIFF_LOG |cat - ~/pr-template.md > /tmp/out && mv /tmp/out ~/pr-template-with-changes.md;
  hub pull-request --push --browse -F - --edit < ~/pr-template-with-changes.md
}
